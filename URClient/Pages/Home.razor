@inject IJSRuntime JSRuntime
@page "/"
@using UR_RTDE


<PageTitle>Home</PageTitle>


<h1>URClient</h1>

<div class="row">
    <div class="col col-12">
        <canvas id="ur_temps"></canvas>.
    </div>
    <div class="col col-12">
        <canvas id="ur_joints"></canvas>
    </div>
</div>

<InputText class="form-control" @bind-Value="ip"></InputText>
<button class="btn btn-primary" @onclick="Connect">Connect</button>

@code {
    private string ip;
    private double[] temp;
    private bool isEdited = false;

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task Connect()
    {
        var client = new RTDEClient(ip, 30004, 10);
        client.AddOutput(RTDEOutput.joint_temperatures);
        client.AddOutput(RTDEOutput.actual_q);

        client.OnSendData = () =>
        {
            return null;
        };

        client.OnReceiveData = async values =>
        {
            var temps = (double[])values[0];
            var joints = (double[])values[1];

            joints = joints.Select(x => 180 / Math.PI * x).ToArray();

            await InvokeAsync(
              async () =>
              {
                  await JSRuntime.InvokeVoidAsync("refreshCharts", temps, joints);
                  StateHasChanged();
                  isEdited = true;
              }
            );

        };

        await client.StartExchangingDataAsync();
    }
}